{
  "A-STAR": [
    {
      "description": "Test for A-STAR on ai.txt state space with ai_fail.txt heuristic",
      "execution_args": "--ss ai.txt --alg astar --h ai_fail.txt",
      "expected_output_fields": {
        "FOUND_SOLUTION": {
          "match": "exact",
          "value": "yes"
        },
        "PATH": {
          "match": "ignored",
          "value": "enroll_artificial_intelligence => fail_lab => fail_course"
        },
        "PATH_LENGTH": {
          "match": "ignored",
          "value": "3"
        },
        "STATES_VISITED": {
          "match": "ignored",
          "value": "6"
        },
        "TOTAL_COST": {
          "match": "exact",
          "value": "21.0"
        }
      },
      "name": "A-STAR ai_fail.txt"
    },
    {
      "description": "Test for A-STAR on ai.txt state space with ai_pass.txt heuristic",
      "execution_args": "--ss ai.txt --alg astar --h ai_pass.txt",
      "expected_output_fields": {
        "FOUND_SOLUTION": {
          "match": "exact",
          "value": "yes"
        },
        "PATH": {
          "match": "ignored",
          "value": "enroll_artificial_intelligence => complete_lab => pass_continuous => pass_course"
        },
        "PATH_LENGTH": {
          "match": "ignored",
          "value": "4"
        },
        "STATES_VISITED": {
          "match": "ignored",
          "value": "4"
        },
        "TOTAL_COST": {
          "match": "exact",
          "value": "17.0"
        }
      },
      "name": "A-STAR ai_pass.txt"
    }
  ],
  "BFS": [
    {
      "description": "Test for BFS on ai.txt state space",
      "execution_args": "--ss ai.txt --alg bfs",
      "expected_output_fields": {
        "FOUND_SOLUTION": {
          "match": "exact",
          "value": "yes"
        },
        "PATH": {
          "match": "exact",
          "value": "enroll_artificial_intelligence => fail_lab => fail_course"
        },
        "PATH_LENGTH": {
          "match": "exact",
          "value": "3"
        },
        "STATES_VISITED": {
          "match": "exact",
          "value": "6"
        },
        "TOTAL_COST": {
          "match": "exact",
          "value": "21.0"
        }
      },
      "name": "BFS"
    }
  ],
  "HEURISTIC-CONSISTENT": [
    {
      "description": "Test for checking if ai_fail.txt heuristic is consistent",
      "execution_args": "--ss ai.txt --h ai_fail.txt --check-consistent ",
      "expected_output_fields": {
        "CONCLUSION": {
          "match": "exact",
          "value": "Heuristic is not consistent."
        },
        "CONDITIONS": {
          "match": "contained",
          "value": [
            "[ERR] h(complete_lab) <= h(fail_continuous) + c: 10.0 <= 6.0 + 1.0",
            "[OK] h(complete_lab) <= h(pass_continuous) + c: 10.0 <= 20.0 + 12.0",
            "[ERR] h(enroll_artificial_intelligence) <= h(complete_lab) + c: 17.0 <= 10.0 + 4.0",
            "[ERR] h(enroll_artificial_intelligence) <= h(fail_lab) + c: 17.0 <= 1.0 + 1.0",
            "[OK] h(fail_continuous) <= h(fail_exam) + c: 6.0 <= 5.0 + 1.0",
            "[OK] h(fail_continuous) <= h(pass_exam) + c: 6.0 <= 1.0 + 16.0",
            "[OK] h(fail_exam) <= h(fail_course) + c: 5.0 <= 0.0 + 20.0",
            "[OK] h(fail_lab) <= h(complete_lab) + c: 1.0 <= 10.0 + 4.0",
            "[OK] h(fail_lab) <= h(fail_course) + c: 1.0 <= 0.0 + 20.0",
            "[OK] h(fail_lab) <= h(fail_lab) + c: 1.0 <= 1.0 + 1.0",
            "[ERR] h(pass_continuous) <= h(pass_course) + c: 20.0 <= 0.0 + 1.0",
            "[OK] h(pass_exam) <= h(pass_course) + c: 1.0 <= 0.0 + 1.0"
          ]
        }
      },
      "name": "HEURISTIC-CONSISTENT ai_fail.txt"
    },
    {
      "description": "Test for checking if ai_pass.txt heuristic is consistent",
      "execution_args": "--ss ai.txt --h ai_pass.txt --check-consistent ",
      "expected_output_fields": {
        "CONCLUSION": {
          "match": "exact",
          "value": "Heuristic is consistent."
        },
        "CONDITIONS": {
          "match": "contained",
          "value": [
            "[OK] h(complete_lab) <= h(fail_continuous) + c: 13.0 <= 17.0 + 1.0",
            "[OK] h(complete_lab) <= h(pass_continuous) + c: 13.0 <= 1.0 + 12.0",
            "[OK] h(enroll_artificial_intelligence) <= h(complete_lab) + c: 17.0 <= 13.0 + 4.0",
            "[OK] h(enroll_artificial_intelligence) <= h(fail_lab) + c: 17.0 <= 17.0 + 1.0",
            "[OK] h(fail_continuous) <= h(fail_exam) + c: 17.0 <= 20.0 + 1.0",
            "[OK] h(fail_continuous) <= h(pass_exam) + c: 17.0 <= 1.0 + 16.0",
            "[OK] h(fail_exam) <= h(fail_course) + c: 20.0 <= 0.0 + 20.0",
            "[OK] h(fail_lab) <= h(complete_lab) + c: 17.0 <= 13.0 + 4.0",
            "[OK] h(fail_lab) <= h(fail_course) + c: 17.0 <= 0.0 + 20.0",
            "[OK] h(fail_lab) <= h(fail_lab) + c: 17.0 <= 17.0 + 1.0",
            "[OK] h(pass_continuous) <= h(pass_course) + c: 1.0 <= 0.0 + 1.0",
            "[OK] h(pass_exam) <= h(pass_course) + c: 1.0 <= 0.0 + 1.0"
          ]
        }
      },
      "name": "HEURISTIC-CONSISTENT ai_pass.txt"
    }
  ],
  "HEURISTIC-OPTIMISTIC": [
    {
      "description": "Test for checking if ai_fail.txt heuristic is optimistic",
      "execution_args": "--ss ai.txt --h ai_fail.txt --check-optimistic ",
      "expected_output_fields": {
        "CONCLUSION": {
          "match": "exact",
          "value": "Heuristic is not optimistic."
        },
        "CONDITIONS": {
          "match": "contained",
          "value": [
            "[OK] h(complete_lab) <= h*: 10.0 <= 13.0",
            "[OK] h(enroll_artificial_intelligence) <= h*: 17.0 <= 17.0",
            "[OK] h(fail_continuous) <= h*: 6.0 <= 17.0",
            "[OK] h(fail_course) <= h*: 0.0 <= 0.0",
            "[OK] h(fail_exam) <= h*: 5.0 <= 20.0",
            "[OK] h(fail_lab) <= h*: 1.0 <= 17.0",
            "[ERR] h(pass_continuous) <= h*: 20.0 <= 1.0",
            "[OK] h(pass_course) <= h*: 0.0 <= 0.0",
            "[OK] h(pass_exam) <= h*: 1.0 <= 1.0"
          ]
        }
      },
      "name": "HEURISTIC-OPTIMISTIC ai_fail.txt"
    },
    {
      "description": "Test for checking if ai_pass.txt heuristic is optimistic",
      "execution_args": "--ss ai.txt --h ai_pass.txt --check-optimistic ",
      "expected_output_fields": {
        "CONCLUSION": {
          "match": "exact",
          "value": "Heuristic is optimistic."
        },
        "CONDITIONS": {
          "match": "contained",
          "value": [
            "[OK] h(complete_lab) <= h*: 13.0 <= 13.0",
            "[OK] h(enroll_artificial_intelligence) <= h*: 17.0 <= 17.0",
            "[OK] h(fail_continuous) <= h*: 17.0 <= 17.0",
            "[OK] h(fail_course) <= h*: 0.0 <= 0.0",
            "[OK] h(fail_exam) <= h*: 20.0 <= 20.0",
            "[OK] h(fail_lab) <= h*: 17.0 <= 17.0",
            "[OK] h(pass_continuous) <= h*: 1.0 <= 1.0",
            "[OK] h(pass_course) <= h*: 0.0 <= 0.0",
            "[OK] h(pass_exam) <= h*: 1.0 <= 1.0"
          ]
        }
      },
      "name": "HEURISTIC-OPTIMISTIC ai_pass.txt"
    }
  ],
  "UCS": [
    {
      "description": "Test for UCS on ai.txt state space",
      "execution_args": "--ss ai.txt --alg ucs",
      "expected_output_fields": {
        "FOUND_SOLUTION": {
          "match": "exact",
          "value": "yes"
        },
        "PATH": {
          "match": "ignored",
          "value": "enroll_artificial_intelligence => complete_lab => pass_continuous => pass_course"
        },
        "PATH_LENGTH": {
          "match": "ignored",
          "value": "4"
        },
        "STATES_VISITED": {
          "match": "ignored",
          "value": "7"
        },
        "TOTAL_COST": {
          "match": "exact",
          "value": "17.0"
        }
      },
      "name": "UCS"
    }
  ]
}