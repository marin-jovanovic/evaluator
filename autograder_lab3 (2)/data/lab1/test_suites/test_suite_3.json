{
  "A-STAR": [
    {
      "description": "Test for A-STAR on test_case_3.txt state space with test_case_3_heuristic.txt heuristic",
      "execution_args": "--ss test_case_3.txt --alg astar --h test_case_3_heuristic.txt",
      "expected_output_fields": {
        "FOUND_SOLUTION": {
          "match": "exact",
          "value": "yes"
        },
        "PATH": {
          "match": "ignored",
          "value": "A => E => F => G => M => B => Y"
        },
        "PATH_LENGTH": {
          "match": "ignored",
          "value": "7"
        },
        "STATES_VISITED": {
          "match": "ignored",
          "value": "21"
        },
        "TOTAL_COST": {
          "match": "exact",
          "value": "208.0"
        }
      },
      "name": "A-STAR test_case_3_heuristic.txt"
    }
  ],
  "BFS": [
    {
      "description": "Test for BFS on test_case_3.txt state space",
      "execution_args": "--ss test_case_3.txt --alg bfs",
      "expected_output_fields": {
        "FOUND_SOLUTION": {
          "match": "exact",
          "value": "yes"
        },
        "PATH": {
          "match": "exact",
          "value": "A => E => F => C => L => Y"
        },
        "PATH_LENGTH": {
          "match": "exact",
          "value": "6"
        },
        "STATES_VISITED": {
          "match": "exact",
          "value": "21"
        },
        "TOTAL_COST": {
          "match": "exact",
          "value": "216.0"
        }
      },
      "name": "BFS"
    }
  ],
  "HEURISTIC-CONSISTENT": [
    {
      "description": "Test for checking if test_case_3_heuristic.txt heuristic is consistent",
      "execution_args": "--ss test_case_3.txt --h test_case_3_heuristic.txt --check-consistent ",
      "expected_output_fields": {
        "CONCLUSION": {
          "match": "exact",
          "value": "Heuristic is consistent."
        },
        "CONDITIONS": {
          "match": "contained",
          "value": [
            "[OK] h(A) <= h(E) + c: 3.0 <= 3.0 + 3.0",
            "[OK] h(B) <= h(D) + c: 4.0 <= 21.0 + 21.0",
            "[OK] h(B) <= h(H) + c: 4.0 <= 27.0 + 27.0",
            "[OK] h(B) <= h(I) + c: 4.0 <= 14.0 + 14.0",
            "[OK] h(B) <= h(M) + c: 4.0 <= 4.0 + 4.0",
            "[OK] h(B) <= h(P) + c: 4.0 <= 35.0 + 35.0",
            "[OK] h(B) <= h(R) + c: 4.0 <= 26.0 + 39.0",
            "[OK] h(B) <= h(Y) + c: 4.0 <= 0.0 + 62.0",
            "[OK] h(C) <= h(F) + c: 33.0 <= 46.0 + 56.0",
            "[OK] h(C) <= h(I) + c: 33.0 <= 14.0 + 44.0",
            "[OK] h(C) <= h(L) + c: 33.0 <= 44.0 + 44.0",
            "[OK] h(C) <= h(Q) + c: 33.0 <= 36.0 + 38.0",
            "[OK] h(C) <= h(R) + c: 33.0 <= 26.0 + 42.0",
            "[OK] h(C) <= h(W) + c: 33.0 <= 33.0 + 33.0",
            "[OK] h(D) <= h(B) + c: 21.0 <= 4.0 + 21.0",
            "[OK] h(D) <= h(S) + c: 21.0 <= 30.0 + 46.0",
            "[OK] h(D) <= h(Y) + c: 21.0 <= 0.0 + 67.0",
            "[OK] h(E) <= h(A) + c: 3.0 <= 3.0 + 3.0",
            "[OK] h(E) <= h(F) + c: 3.0 <= 46.0 + 49.0",
            "[OK] h(F) <= h(C) + c: 46.0 <= 33.0 + 56.0",
            "[OK] h(F) <= h(E) + c: 46.0 <= 3.0 + 49.0",
            "[OK] h(F) <= h(G) + c: 46.0 <= 35.0 + 46.0",
            "[OK] h(F) <= h(S) + c: 46.0 <= 30.0 + 50.0",
            "[OK] h(G) <= h(F) + c: 35.0 <= 46.0 + 46.0",
            "[OK] h(G) <= h(H) + c: 35.0 <= 27.0 + 35.0",
            "[OK] h(G) <= h(K) + c: 35.0 <= 41.0 + 44.0",
            "[OK] h(G) <= h(M) + c: 35.0 <= 4.0 + 44.0",
            "[OK] h(G) <= h(O) + c: 35.0 <= 35.0 + 41.0",
            "[OK] h(G) <= h(P) + c: 35.0 <= 35.0 + 45.0",
            "[OK] h(H) <= h(B) + c: 27.0 <= 4.0 + 27.0",
            "[OK] h(H) <= h(G) + c: 27.0 <= 35.0 + 35.0",
            "[OK] h(I) <= h(B) + c: 14.0 <= 4.0 + 14.0",
            "[OK] h(I) <= h(C) + c: 14.0 <= 33.0 + 44.0",
            "[OK] h(I) <= h(R) + c: 14.0 <= 26.0 + 26.0",
            "[OK] h(I) <= h(T) + c: 14.0 <= 30.0 + 34.0",
            "[OK] h(J) <= h(Q) + c: 36.0 <= 36.0 + 36.0",
            "[OK] h(K) <= h(G) + c: 41.0 <= 35.0 + 44.0",
            "[OK] h(K) <= h(U) + c: 41.0 <= 41.0 + 41.0",
            "[OK] h(K) <= h(X) + c: 41.0 <= 35.0 + 60.0",
            "[OK] h(L) <= h(C) + c: 44.0 <= 33.0 + 44.0",
            "[OK] h(L) <= h(Y) + c: 44.0 <= 0.0 + 64.0",
            "[OK] h(M) <= h(B) + c: 4.0 <= 4.0 + 4.0",
            "[OK] h(M) <= h(G) + c: 4.0 <= 35.0 + 44.0",
            "[OK] h(M) <= h(N) + c: 4.0 <= 41.0 + 41.0",
            "[OK] h(M) <= h(P) + c: 4.0 <= 35.0 + 47.0",
            "[OK] h(M) <= h(R) + c: 4.0 <= 26.0 + 28.0",
            "[OK] h(N) <= h(M) + c: 41.0 <= 4.0 + 41.0",
            "[OK] h(N) <= h(Y) + c: 41.0 <= 0.0 + 59.0",
            "[OK] h(O) <= h(G) + c: 35.0 <= 35.0 + 41.0",
            "[OK] h(O) <= h(P) + c: 35.0 <= 35.0 + 50.0",
            "[OK] h(O) <= h(X) + c: 35.0 <= 35.0 + 35.0",
            "[OK] h(P) <= h(B) + c: 35.0 <= 4.0 + 35.0",
            "[OK] h(P) <= h(G) + c: 35.0 <= 35.0 + 45.0",
            "[OK] h(P) <= h(M) + c: 35.0 <= 4.0 + 47.0",
            "[OK] h(P) <= h(O) + c: 35.0 <= 35.0 + 50.0",
            "[OK] h(P) <= h(S) + c: 35.0 <= 30.0 + 38.0",
            "[OK] h(P) <= h(U) + c: 35.0 <= 41.0 + 60.0",
            "[OK] h(Q) <= h(C) + c: 36.0 <= 33.0 + 38.0",
            "[OK] h(Q) <= h(J) + c: 36.0 <= 36.0 + 36.0",
            "[OK] h(Q) <= h(T) + c: 36.0 <= 30.0 + 39.0",
            "[OK] h(R) <= h(B) + c: 26.0 <= 4.0 + 39.0",
            "[OK] h(R) <= h(C) + c: 26.0 <= 33.0 + 42.0",
            "[OK] h(R) <= h(I) + c: 26.0 <= 14.0 + 26.0",
            "[OK] h(R) <= h(M) + c: 26.0 <= 4.0 + 28.0",
            "[OK] h(R) <= h(T) + c: 26.0 <= 30.0 + 46.0",
            "[OK] h(R) <= h(V) + c: 26.0 <= 39.0 + 39.0",
            "[OK] h(S) <= h(D) + c: 30.0 <= 21.0 + 46.0",
            "[OK] h(S) <= h(F) + c: 30.0 <= 46.0 + 50.0",
            "[OK] h(S) <= h(P) + c: 30.0 <= 35.0 + 38.0",
            "[OK] h(S) <= h(T) + c: 30.0 <= 30.0 + 30.0",
            "[OK] h(S) <= h(X) + c: 30.0 <= 35.0 + 62.0",
            "[OK] h(T) <= h(I) + c: 30.0 <= 14.0 + 34.0",
            "[OK] h(T) <= h(Q) + c: 30.0 <= 36.0 + 39.0",
            "[OK] h(T) <= h(R) + c: 30.0 <= 26.0 + 46.0",
            "[OK] h(T) <= h(S) + c: 30.0 <= 30.0 + 30.0",
            "[OK] h(U) <= h(K) + c: 41.0 <= 41.0 + 41.0",
            "[OK] h(U) <= h(P) + c: 41.0 <= 35.0 + 60.0",
            "[OK] h(V) <= h(R) + c: 39.0 <= 26.0 + 39.0",
            "[OK] h(V) <= h(X) + c: 39.0 <= 35.0 + 62.0",
            "[OK] h(W) <= h(C) + c: 33.0 <= 33.0 + 33.0",
            "[OK] h(X) <= h(K) + c: 35.0 <= 41.0 + 60.0",
            "[OK] h(X) <= h(O) + c: 35.0 <= 35.0 + 35.0",
            "[OK] h(X) <= h(S) + c: 35.0 <= 30.0 + 62.0",
            "[OK] h(X) <= h(V) + c: 35.0 <= 39.0 + 62.0",
            "[OK] h(X) <= h(Y) + c: 35.0 <= 0.0 + 76.0",
            "[OK] h(Y) <= h(B) + c: 0.0 <= 4.0 + 62.0",
            "[OK] h(Y) <= h(D) + c: 0.0 <= 21.0 + 67.0",
            "[OK] h(Y) <= h(L) + c: 0.0 <= 44.0 + 64.0",
            "[OK] h(Y) <= h(N) + c: 0.0 <= 41.0 + 59.0",
            "[OK] h(Y) <= h(X) + c: 0.0 <= 35.0 + 76.0"
          ]
        }
      },
      "name": "HEURISTIC-CONSISTENT test_case_3_heuristic.txt"
    },
    {
      "description": "Test for checking if test_case_3_heuristic_nonopt.txt heuristic is consistent",
      "execution_args": "--ss test_case_3.txt --h test_case_3_heuristic_nonopt.txt --check-consistent ",
      "expected_output_fields": {
        "CONCLUSION": {
          "match": "exact",
          "value": "Heuristic is not consistent."
        },
        "CONDITIONS": {
          "match": "contained",
          "value": [
            "[OK] h(A) <= h(E) + c: 23.0 <= 54.0 + 3.0",
            "[OK] h(B) <= h(D) + c: 68.0 <= 64.0 + 21.0",
            "[OK] h(B) <= h(H) + c: 68.0 <= 49.0 + 27.0",
            "[ERR] h(B) <= h(I) + c: 68.0 <= 53.0 + 14.0",
            "[OK] h(B) <= h(M) + c: 68.0 <= 70.0 + 4.0",
            "[OK] h(B) <= h(P) + c: 68.0 <= 67.0 + 35.0",
            "[OK] h(B) <= h(R) + c: 68.0 <= 40.0 + 39.0",
            "[ERR] h(B) <= h(Y) + c: 68.0 <= 0.0 + 62.0",
            "[OK] h(C) <= h(F) + c: 48.0 <= 60.0 + 56.0",
            "[OK] h(C) <= h(I) + c: 48.0 <= 53.0 + 44.0",
            "[OK] h(C) <= h(L) + c: 48.0 <= 70.0 + 44.0",
            "[OK] h(C) <= h(Q) + c: 48.0 <= 50.0 + 38.0",
            "[OK] h(C) <= h(R) + c: 48.0 <= 40.0 + 42.0",
            "[OK] h(C) <= h(W) + c: 48.0 <= 44.0 + 33.0",
            "[OK] h(D) <= h(B) + c: 64.0 <= 68.0 + 21.0",
            "[OK] h(D) <= h(S) + c: 64.0 <= 57.0 + 46.0",
            "[OK] h(D) <= h(Y) + c: 64.0 <= 0.0 + 67.0",
            "[ERR] h(E) <= h(A) + c: 54.0 <= 23.0 + 3.0",
            "[OK] h(E) <= h(F) + c: 54.0 <= 60.0 + 49.0",
            "[OK] h(F) <= h(C) + c: 60.0 <= 48.0 + 56.0",
            "[OK] h(F) <= h(E) + c: 60.0 <= 54.0 + 49.0",
            "[OK] h(F) <= h(G) + c: 60.0 <= 53.0 + 46.0",
            "[OK] h(F) <= h(S) + c: 60.0 <= 57.0 + 50.0",
            "[OK] h(G) <= h(F) + c: 53.0 <= 60.0 + 46.0",
            "[OK] h(G) <= h(H) + c: 53.0 <= 49.0 + 35.0",
            "[OK] h(G) <= h(K) + c: 53.0 <= 42.0 + 44.0",
            "[OK] h(G) <= h(M) + c: 53.0 <= 70.0 + 44.0",
            "[OK] h(G) <= h(O) + c: 53.0 <= 53.0 + 41.0",
            "[OK] h(G) <= h(P) + c: 53.0 <= 67.0 + 45.0",
            "[OK] h(H) <= h(B) + c: 49.0 <= 68.0 + 27.0",
            "[OK] h(H) <= h(G) + c: 49.0 <= 53.0 + 35.0",
            "[OK] h(I) <= h(B) + c: 53.0 <= 68.0 + 14.0",
            "[OK] h(I) <= h(C) + c: 53.0 <= 48.0 + 44.0",
            "[OK] h(I) <= h(R) + c: 53.0 <= 40.0 + 26.0",
            "[OK] h(I) <= h(T) + c: 53.0 <= 76.0 + 34.0",
            "[OK] h(J) <= h(Q) + c: 39.0 <= 50.0 + 36.0",
            "[OK] h(K) <= h(G) + c: 42.0 <= 53.0 + 44.0",
            "[OK] h(K) <= h(U) + c: 42.0 <= 61.0 + 41.0",
            "[OK] h(K) <= h(X) + c: 42.0 <= 78.0 + 60.0",
            "[OK] h(L) <= h(C) + c: 70.0 <= 48.0 + 44.0",
            "[ERR] h(L) <= h(Y) + c: 70.0 <= 0.0 + 64.0",
            "[OK] h(M) <= h(B) + c: 70.0 <= 68.0 + 4.0",
            "[OK] h(M) <= h(G) + c: 70.0 <= 53.0 + 44.0",
            "[OK] h(M) <= h(N) + c: 70.0 <= 62.0 + 41.0",
            "[OK] h(M) <= h(P) + c: 70.0 <= 67.0 + 47.0",
            "[ERR] h(M) <= h(R) + c: 70.0 <= 40.0 + 28.0",
            "[OK] h(N) <= h(M) + c: 62.0 <= 70.0 + 41.0",
            "[ERR] h(N) <= h(Y) + c: 62.0 <= 0.0 + 59.0",
            "[OK] h(O) <= h(G) + c: 53.0 <= 53.0 + 41.0",
            "[OK] h(O) <= h(P) + c: 53.0 <= 67.0 + 50.0",
            "[OK] h(O) <= h(X) + c: 53.0 <= 78.0 + 35.0",
            "[OK] h(P) <= h(B) + c: 67.0 <= 68.0 + 35.0",
            "[OK] h(P) <= h(G) + c: 67.0 <= 53.0 + 45.0",
            "[OK] h(P) <= h(M) + c: 67.0 <= 70.0 + 47.0",
            "[OK] h(P) <= h(O) + c: 67.0 <= 53.0 + 50.0",
            "[OK] h(P) <= h(S) + c: 67.0 <= 57.0 + 38.0",
            "[OK] h(P) <= h(U) + c: 67.0 <= 61.0 + 60.0",
            "[OK] h(Q) <= h(C) + c: 50.0 <= 48.0 + 38.0",
            "[OK] h(Q) <= h(J) + c: 50.0 <= 39.0 + 36.0",
            "[OK] h(Q) <= h(T) + c: 50.0 <= 76.0 + 39.0",
            "[OK] h(R) <= h(B) + c: 40.0 <= 68.0 + 39.0",
            "[OK] h(R) <= h(C) + c: 40.0 <= 48.0 + 42.0",
            "[OK] h(R) <= h(I) + c: 40.0 <= 53.0 + 26.0",
            "[OK] h(R) <= h(M) + c: 40.0 <= 70.0 + 28.0",
            "[OK] h(R) <= h(T) + c: 40.0 <= 76.0 + 46.0",
            "[OK] h(R) <= h(V) + c: 40.0 <= 53.0 + 39.0",
            "[OK] h(S) <= h(D) + c: 57.0 <= 64.0 + 46.0",
            "[OK] h(S) <= h(F) + c: 57.0 <= 60.0 + 50.0",
            "[OK] h(S) <= h(P) + c: 57.0 <= 67.0 + 38.0",
            "[OK] h(S) <= h(T) + c: 57.0 <= 76.0 + 30.0",
            "[OK] h(S) <= h(X) + c: 57.0 <= 78.0 + 62.0",
            "[OK] h(T) <= h(I) + c: 76.0 <= 53.0 + 34.0",
            "[OK] h(T) <= h(Q) + c: 76.0 <= 50.0 + 39.0",
            "[OK] h(T) <= h(R) + c: 76.0 <= 40.0 + 46.0",
            "[OK] h(T) <= h(S) + c: 76.0 <= 57.0 + 30.0",
            "[OK] h(U) <= h(K) + c: 61.0 <= 42.0 + 41.0",
            "[OK] h(U) <= h(P) + c: 61.0 <= 67.0 + 60.0",
            "[OK] h(V) <= h(R) + c: 53.0 <= 40.0 + 39.0",
            "[OK] h(V) <= h(X) + c: 53.0 <= 78.0 + 62.0",
            "[OK] h(W) <= h(C) + c: 44.0 <= 48.0 + 33.0",
            "[OK] h(X) <= h(K) + c: 78.0 <= 42.0 + 60.0",
            "[OK] h(X) <= h(O) + c: 78.0 <= 53.0 + 35.0",
            "[OK] h(X) <= h(S) + c: 78.0 <= 57.0 + 62.0",
            "[OK] h(X) <= h(V) + c: 78.0 <= 53.0 + 62.0",
            "[ERR] h(X) <= h(Y) + c: 78.0 <= 0.0 + 76.0",
            "[OK] h(Y) <= h(B) + c: 0.0 <= 68.0 + 62.0",
            "[OK] h(Y) <= h(D) + c: 0.0 <= 64.0 + 67.0",
            "[OK] h(Y) <= h(L) + c: 0.0 <= 70.0 + 64.0",
            "[OK] h(Y) <= h(N) + c: 0.0 <= 62.0 + 59.0",
            "[OK] h(Y) <= h(X) + c: 0.0 <= 78.0 + 76.0"
          ]
        }
      },
      "name": "HEURISTIC-CONSISTENT test_case_3_heuristic_nonopt.txt"
    }
  ],
  "HEURISTIC-OPTIMISTIC": [
    {
      "description": "Test for checking if test_case_3_heuristic.txt heuristic is optimistic",
      "execution_args": "--ss test_case_3.txt --h test_case_3_heuristic.txt --check-optimistic ",
      "expected_output_fields": {
        "CONCLUSION": {
          "match": "exact",
          "value": "Heuristic is optimistic."
        },
        "CONDITIONS": {
          "match": "contained",
          "value": [
            "[OK] h(A) <= h*: 3.0 <= 208.0",
            "[OK] h(B) <= h*: 4.0 <= 62.0",
            "[OK] h(C) <= h*: 33.0 <= 108.0",
            "[OK] h(D) <= h*: 21.0 <= 67.0",
            "[OK] h(E) <= h*: 3.0 <= 205.0",
            "[OK] h(F) <= h*: 46.0 <= 156.0",
            "[OK] h(G) <= h*: 35.0 <= 110.0",
            "[OK] h(H) <= h*: 27.0 <= 89.0",
            "[OK] h(I) <= h*: 14.0 <= 76.0",
            "[OK] h(J) <= h*: 36.0 <= 182.0",
            "[OK] h(K) <= h*: 41.0 <= 136.0",
            "[OK] h(L) <= h*: 44.0 <= 64.0",
            "[OK] h(M) <= h*: 4.0 <= 66.0",
            "[OK] h(N) <= h*: 41.0 <= 59.0",
            "[OK] h(O) <= h*: 35.0 <= 111.0",
            "[OK] h(P) <= h*: 35.0 <= 97.0",
            "[OK] h(Q) <= h*: 36.0 <= 146.0",
            "[OK] h(R) <= h*: 26.0 <= 94.0",
            "[OK] h(S) <= h*: 30.0 <= 113.0",
            "[OK] h(T) <= h*: 30.0 <= 110.0",
            "[OK] h(U) <= h*: 41.0 <= 157.0",
            "[OK] h(V) <= h*: 39.0 <= 133.0",
            "[OK] h(W) <= h*: 33.0 <= 141.0",
            "[OK] h(X) <= h*: 35.0 <= 76.0",
            "[OK] h(Y) <= h*: 0.0 <= 0.0"
          ]}
      },
      "name": "HEURISTIC-OPTIMISTIC test_case_3_heuristic.txt"
    },
    {
      "description": "Test for checking if test_case_3_heuristic_nonopt.txt heuristic is optimistic",
      "execution_args": "--ss test_case_3.txt --h test_case_3_heuristic_nonopt.txt --check-optimistic ",
      "expected_output_fields": {
        "CONCLUSION": {
          "match": "exact",
          "value": "Heuristic is not optimistic."
        },
        "CONDITIONS": {
          "match": "contained",
          "value": [
            "[OK] h(A) <= h*: 23.0 <= 208.0",
            "[ERR] h(B) <= h*: 68.0 <= 62.0",
            "[OK] h(C) <= h*: 48.0 <= 108.0",
            "[OK] h(D) <= h*: 64.0 <= 67.0",
            "[OK] h(E) <= h*: 54.0 <= 205.0",
            "[OK] h(F) <= h*: 60.0 <= 156.0",
            "[OK] h(G) <= h*: 53.0 <= 110.0",
            "[OK] h(H) <= h*: 49.0 <= 89.0",
            "[OK] h(I) <= h*: 53.0 <= 76.0",
            "[OK] h(J) <= h*: 39.0 <= 182.0",
            "[OK] h(K) <= h*: 42.0 <= 136.0",
            "[ERR] h(L) <= h*: 70.0 <= 64.0",
            "[ERR] h(M) <= h*: 70.0 <= 66.0",
            "[ERR] h(N) <= h*: 62.0 <= 59.0",
            "[OK] h(O) <= h*: 53.0 <= 111.0",
            "[OK] h(P) <= h*: 67.0 <= 97.0",
            "[OK] h(Q) <= h*: 50.0 <= 146.0",
            "[OK] h(R) <= h*: 40.0 <= 94.0",
            "[OK] h(S) <= h*: 57.0 <= 113.0",
            "[OK] h(T) <= h*: 76.0 <= 110.0",
            "[OK] h(U) <= h*: 61.0 <= 157.0",
            "[OK] h(V) <= h*: 53.0 <= 133.0",
            "[OK] h(W) <= h*: 44.0 <= 141.0",
            "[ERR] h(X) <= h*: 78.0 <= 76.0",
            "[OK] h(Y) <= h*: 0.0 <= 0.0"
          ]}
      },
      "name": "HEURISTIC-OPTIMISTIC test_case_3_heuristic_nonopt.txt"
    }
  ],
  "UCS": [
    {
      "description": "Test for UCS on test_case_3.txt state space",
      "execution_args": "--ss test_case_3.txt --alg ucs",
      "expected_output_fields": {
        "FOUND_SOLUTION": {
          "match": "exact",
          "value": "yes"
        },
        "PATH": {
          "match": "ignored",
          "value": "A => E => F => G => M => B => Y"
        },
        "PATH_LENGTH": {
          "match": "ignored",
          "value": "7"
        },
        "STATES_VISITED": {
          "match": "ignored",
          "value": "25"
        },
        "TOTAL_COST": {
          "match": "exact",
          "value": "208.0"
        }
      },
      "name": "UCS"
    }
  ]
}