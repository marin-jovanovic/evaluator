{
  "A-STAR": [
    {
      "description": "Test for A-STAR on test_case_1.txt state space with test_case_1_heuristic.txt heuristic",
      "execution_args": "--ss test_case_1.txt --alg astar --h test_case_1_heuristic.txt",
      "expected_output_fields": {
        "FOUND_SOLUTION": {
          "match": "exact",
          "value": "yes"
        },
        "PATH": {
          "match": "ignored",
          "value": "A => D => H => E => O"
        },
        "PATH_LENGTH": {
          "match": "ignored",
          "value": "5"
        },
        "STATES_VISITED": {
          "match": "ignored",
          "value": "12"
        },
        "TOTAL_COST": {
          "match": "exact",
          "value": "54.0"
        }
      },
      "name": "A-STAR test_case_1_heuristic.txt"
    }
  ],
  "BFS": [
    {
      "description": "Test for BFS on test_case_1.txt state space",
      "execution_args": "--ss test_case_1.txt --alg bfs",
      "expected_output_fields": {
        "FOUND_SOLUTION": {
          "match": "exact",
          "value": "yes"
        },
        "PATH": {
          "match": "exact",
          "value": "A => D => H => E => O"
        },
        "PATH_LENGTH": {
          "match": "exact",
          "value": "5"
        },
        "STATES_VISITED": {
          "match": "exact",
          "value": "15"
        },
        "TOTAL_COST": {
          "match": "exact",
          "value": "54.0"
        }
      },
      "name": "BFS"
    }
  ],
  "HEURISTIC-CONSISTENT": [
    {
      "description": "Test for checking if test_case_1_heuristic.txt heuristic is consistent",
      "execution_args": "--ss test_case_1.txt --h test_case_1_heuristic.txt --check-consistent ",
      "expected_output_fields": {
        "CONCLUSION": {
          "match": "exact",
          "value": "Heuristic is consistent."
        },
        "CONDITIONS": {
          "match": "contained",
          "value": [
            "[OK] h(A) <= h(D) + c: 1.0 <= 6.0 + 15.0",
            "[OK] h(A) <= h(F) + c: 1.0 <= 1.0 + 1.0",
            "[OK] h(B) <= h(C) + c: 7.0 <= 8.0 + 8.0",
            "[OK] h(B) <= h(E) + c: 7.0 <= 7.0 + 7.0",
            "[OK] h(B) <= h(I) + c: 7.0 <= 9.0 + 9.0",
            "[OK] h(C) <= h(B) + c: 8.0 <= 7.0 + 8.0",
            "[OK] h(C) <= h(D) + c: 8.0 <= 6.0 + 18.0",
            "[OK] h(C) <= h(I) + c: 8.0 <= 9.0 + 14.0",
            "[OK] h(C) <= h(K) + c: 8.0 <= 10.0 + 15.0",
            "[OK] h(D) <= h(A) + c: 6.0 <= 1.0 + 15.0",
            "[OK] h(D) <= h(C) + c: 6.0 <= 8.0 + 18.0",
            "[OK] h(D) <= h(F) + c: 6.0 <= 1.0 + 17.0",
            "[OK] h(D) <= h(G) + c: 6.0 <= 13.0 + 13.0",
            "[OK] h(D) <= h(H) + c: 6.0 <= 12.0 + 16.0",
            "[OK] h(D) <= h(L) + c: 6.0 <= 10.0 + 10.0",
            "[OK] h(D) <= h(M) + c: 6.0 <= 6.0 + 6.0",
            "[OK] h(E) <= h(B) + c: 7.0 <= 7.0 + 7.0",
            "[OK] h(E) <= h(H) + c: 7.0 <= 12.0 + 12.0",
            "[OK] h(E) <= h(I) + c: 7.0 <= 9.0 + 13.0",
            "[OK] h(E) <= h(O) + c: 7.0 <= 0.0 + 11.0",
            "[OK] h(F) <= h(A) + c: 1.0 <= 1.0 + 1.0",
            "[OK] h(F) <= h(D) + c: 1.0 <= 6.0 + 17.0",
            "[OK] h(F) <= h(J) + c: 1.0 <= 15.0 + 15.0",
            "[OK] h(G) <= h(D) + c: 13.0 <= 6.0 + 13.0",
            "[OK] h(H) <= h(D) + c: 12.0 <= 6.0 + 16.0",
            "[OK] h(H) <= h(E) + c: 12.0 <= 7.0 + 12.0",
            "[OK] h(I) <= h(B) + c: 9.0 <= 7.0 + 9.0",
            "[OK] h(I) <= h(C) + c: 9.0 <= 8.0 + 14.0",
            "[OK] h(I) <= h(E) + c: 9.0 <= 7.0 + 13.0",
            "[OK] h(I) <= h(K) + c: 9.0 <= 10.0 + 10.0",
            "[OK] h(J) <= h(F) + c: 15.0 <= 1.0 + 15.0",
            "[OK] h(K) <= h(C) + c: 10.0 <= 8.0 + 15.0",
            "[OK] h(K) <= h(I) + c: 10.0 <= 9.0 + 10.0",
            "[OK] h(K) <= h(N) + c: 10.0 <= 11.0 + 11.0",
            "[OK] h(L) <= h(D) + c: 10.0 <= 6.0 + 10.0",
            "[OK] h(M) <= h(D) + c: 6.0 <= 6.0 + 6.0",
            "[OK] h(N) <= h(K) + c: 11.0 <= 10.0 + 11.0",
            "[OK] h(O) <= h(E) + c: 0.0 <= 7.0 + 11.0"
          ]
        }
      },
      "name": "HEURISTIC-CONSISTENT test_case_1_heuristic.txt"
    },
    {
      "description": "Test for checking if test_case_1_heuristic_nonopt.txt heuristic is consistent",
      "execution_args": "--ss test_case_1.txt --h test_case_1_heuristic_nonopt.txt --check-consistent ",
      "expected_output_fields": {
        "CONCLUSION": {
          "match": "exact",
          "value": "Heuristic is not consistent."
        },
        "CONDITIONS": {
          "match": "contained",
          "value": [
            "[OK] h(A) <= h(D) + c: 0.0 <= 26.0 + 15.0",
            "[OK] h(A) <= h(F) + c: 0.0 <= 24.0 + 1.0",
            "[OK] h(B) <= h(C) + c: 11.0 <= 25.0 + 8.0",
            "[OK] h(B) <= h(E) + c: 11.0 <= 21.0 + 7.0",
            "[OK] h(B) <= h(I) + c: 11.0 <= 5.0 + 9.0",
            "[ERR] h(C) <= h(B) + c: 25.0 <= 11.0 + 8.0",
            "[OK] h(C) <= h(D) + c: 25.0 <= 26.0 + 18.0",
            "[ERR] h(C) <= h(I) + c: 25.0 <= 5.0 + 14.0",
            "[OK] h(C) <= h(K) + c: 25.0 <= 19.0 + 15.0",
            "[ERR] h(D) <= h(A) + c: 26.0 <= 0.0 + 15.0",
            "[OK] h(D) <= h(C) + c: 26.0 <= 25.0 + 18.0",
            "[OK] h(D) <= h(F) + c: 26.0 <= 24.0 + 17.0",
            "[OK] h(D) <= h(G) + c: 26.0 <= 13.0 + 13.0",
            "[ERR] h(D) <= h(H) + c: 26.0 <= 7.0 + 16.0",
            "[ERR] h(D) <= h(L) + c: 26.0 <= 8.0 + 10.0",
            "[ERR] h(D) <= h(M) + c: 26.0 <= 13.0 + 6.0",
            "[ERR] h(E) <= h(B) + c: 21.0 <= 11.0 + 7.0",
            "[ERR] h(E) <= h(H) + c: 21.0 <= 7.0 + 12.0",
            "[ERR] h(E) <= h(I) + c: 21.0 <= 5.0 + 13.0",
            "[ERR] h(E) <= h(O) + c: 21.0 <= 0.0 + 11.0",
            "[ERR] h(F) <= h(A) + c: 24.0 <= 0.0 + 1.0",
            "[OK] h(F) <= h(D) + c: 24.0 <= 26.0 + 17.0",
            "[OK] h(F) <= h(J) + c: 24.0 <= 14.0 + 15.0",
            "[OK] h(G) <= h(D) + c: 13.0 <= 26.0 + 13.0",
            "[OK] h(H) <= h(D) + c: 7.0 <= 26.0 + 16.0",
            "[OK] h(H) <= h(E) + c: 7.0 <= 21.0 + 12.0",
            "[OK] h(I) <= h(B) + c: 5.0 <= 11.0 + 9.0",
            "[OK] h(I) <= h(C) + c: 5.0 <= 25.0 + 14.0",
            "[OK] h(I) <= h(E) + c: 5.0 <= 21.0 + 13.0",
            "[OK] h(I) <= h(K) + c: 5.0 <= 19.0 + 10.0",
            "[OK] h(J) <= h(F) + c: 14.0 <= 24.0 + 15.0",
            "[OK] h(K) <= h(C) + c: 19.0 <= 25.0 + 15.0",
            "[ERR] h(K) <= h(I) + c: 19.0 <= 5.0 + 10.0",
            "[OK] h(K) <= h(N) + c: 19.0 <= 19.0 + 11.0",
            "[OK] h(L) <= h(D) + c: 8.0 <= 26.0 + 10.0",
            "[OK] h(M) <= h(D) + c: 13.0 <= 26.0 + 6.0",
            "[OK] h(N) <= h(K) + c: 19.0 <= 19.0 + 11.0",
            "[OK] h(O) <= h(E) + c: 0.0 <= 21.0 + 11.0"
          ]
        }
      },
      "name": "HEURISTIC-CONSISTENT test_case_1_heuristic_nonopt.txt"
    }
  ],
  "HEURISTIC-OPTIMISTIC": [
    {
      "description": "Test for checking if test_case_1_heuristic.txt heuristic is optimistic",
      "execution_args": "--ss test_case_1.txt --h test_case_1_heuristic.txt --check-optimistic ",
      "expected_output_fields": {
        "CONCLUSION": {
          "match": "exact",
          "value": "Heuristic is optimistic."
        },
        "CONDITIONS": {
          "match": "contained",
          "value": [
            "[OK] h(A) <= h*: 1.0 <= 54.0",
            "[OK] h(B) <= h*: 7.0 <= 18.0",
            "[OK] h(C) <= h*: 8.0 <= 26.0",
            "[OK] h(D) <= h*: 6.0 <= 39.0",
            "[OK] h(E) <= h*: 7.0 <= 11.0",
            "[OK] h(F) <= h*: 1.0 <= 55.0",
            "[OK] h(G) <= h*: 13.0 <= 52.0",
            "[OK] h(H) <= h*: 12.0 <= 23.0",
            "[OK] h(I) <= h*: 9.0 <= 24.0",
            "[OK] h(J) <= h*: 15.0 <= 70.0",
            "[OK] h(K) <= h*: 10.0 <= 34.0",
            "[OK] h(L) <= h*: 10.0 <= 49.0",
            "[OK] h(M) <= h*: 6.0 <= 45.0",
            "[OK] h(N) <= h*: 11.0 <= 45.0",
            "[OK] h(O) <= h*: 0.0 <= 0.0"
          ]
        }
      },
      "name": "HEURISTIC-OPTIMISTIC test_case_1_heuristic.txt"
    },
    {
      "description": "Test for checking if test_case_1_heuristic_nonopt.txt heuristic is optimistic",
      "execution_args": "--ss test_case_1.txt --h test_case_1_heuristic_nonopt.txt --check-optimistic ",
      "expected_output_fields": {
        "CONCLUSION": {
          "match": "exact",
          "value": "Heuristic is not optimistic."
        },
        "CONDITIONS": {
          "match": "contained",
          "value": [
            "[OK] h(A) <= h*: 0.0 <= 54.0",
            "[OK] h(B) <= h*: 11.0 <= 18.0",
            "[OK] h(C) <= h*: 25.0 <= 26.0",
            "[OK] h(D) <= h*: 26.0 <= 39.0",
            "[ERR] h(E) <= h*: 21.0 <= 11.0",
            "[OK] h(F) <= h*: 24.0 <= 55.0",
            "[OK] h(G) <= h*: 13.0 <= 52.0",
            "[OK] h(H) <= h*: 7.0 <= 23.0",
            "[OK] h(I) <= h*: 5.0 <= 24.0",
            "[OK] h(J) <= h*: 14.0 <= 70.0",
            "[OK] h(K) <= h*: 19.0 <= 34.0",
            "[OK] h(L) <= h*: 8.0 <= 49.0",
            "[OK] h(M) <= h*: 13.0 <= 45.0",
            "[OK] h(N) <= h*: 19.0 <= 45.0",
            "[OK] h(O) <= h*: 0.0 <= 0.0"
          ]}
      },
      "name": "HEURISTIC-OPTIMISTIC test_case_1_heuristic_nonopt.txt"
    }
  ],
  "UCS": [
    {
      "description": "Test for UCS on test_case_1.txt state space",
      "execution_args": "--ss test_case_1.txt --alg ucs",
      "expected_output_fields": {
        "FOUND_SOLUTION": {
          "match": "exact",
          "value": "yes"
        },
        "PATH": {
          "match": "ignored",
          "value": "A => D => H => E => O"
        },
        "PATH_LENGTH": {
          "match": "ignored",
          "value": "5"
        },
        "STATES_VISITED": {
          "match": "ignored",
          "value": "14"
        },
        "TOTAL_COST": {
          "match": "exact",
          "value": "54.0"
        }
      },
      "name": "UCS"
    }
  ]
}